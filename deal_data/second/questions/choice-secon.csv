problem_id,problem_text,skill_name,choiceA,choiceB,choiceC,choiceD,answer,level
,下列叙述中，正确的是：（）,"变量,java源文件",声明变量时必须指定一个类型,Java认为变量number和Number相同,Java中唯一的注释方式是,源文件中public类可以有0或多个,A,0
,以下哪个单词不是 Java 的关键字？,"关键字,类",static,Boolean,void,private,B,0
,java main 函数写法正确的是？,"静态方法,关键字,方法返回类型,形式参数",public static void main(),public void main(String[] args),public static void main(String[] args), static void main(String[] args),C,0
,boolean 类型的默认值为？,"类,数据类型,默认值",TRUE,FALSE,"null",未定义,B,0
,"以下代码输出正确的是？public class Test {
    public static void main(String[] args) {
        String s1 = ""runoob"";
        String s2 = ""runoob"";
        System.out.println(""s1 == s2 is:"" + s1 == s2);
    }
}","运算符,字符串,运算符优先级",TRUE,s1 == s2 is:false,s1 == s2 is:true,FALSE,D,1
,以下语句哪个是访问数组 arrOne 的第一个元素？,"数组,数组访问", arrOne[0], arrOne[1], arrOne[2], arrOne[3],A,0
,"以下代码，输出结果为：

public class Test {
    public static void main(String args[]) { 
        int x=4; 
        System.out.println(x++); 
    } 
}",算术运算符,output=0,output=6,output=5,output=4,D,0
,"以下代码输出结果为：

public class IfTest{
    public static void main(String[] args){
        int x=3;
        int y=1;
        if(x=y)
            System.out.println(""不相等"");
        else
            System.out.println(""相等"");
     }
}","赋值语句,关系运算符,编译运行",不相等,相等,第五行代码会引起编译错误,程序正常执行，但没有输出结果,C,0
,float 变量的默认值为？,"变量,默认值",0.0d,0.0f,0,未定义,B,0
,"以下代码输出结果为？

public class Test {
    public static void main(String[] args) {
        char c = 65;
        System.out.println(""c = ""+c);
    }
}","变量,变量类型,ASCLL码",c = 65,执行错误,c = A,,C,1
,以下初始化 Java 数组的代码哪一个是正确的。,"数组,数组初始化,数据类型","int [] myArray = {""1"", ""2"", ""3""};"," int [] myArray = (5, 4, 3);"," int myArray [] [] = {1,2,3,4};","int myArray [] = {1, 3, 5};",D,0
,"下代码输出结果为？

class Test
{
    public static void main(String[] args)
    {
        StringBuffer a = new StringBuffer(""Runoob"");
        StringBuffer b = new StringBuffer(""Google"");
        a.delete(1,3);
        a.append(b);
        System.out.println(a);
    }
}",方法,oobGoogle, RoobGoogle,RuoobGoogle,RuobGoogle,B,0
,以下哪个类可以访问所有（子类与超类）的 public 和 protected 方法 ?,类,内部类,外部类,子类,超类,C,0
,哪个修饰符定义了方法与属性只能在同一个类中访问？,修饰符,public,protected,default,private,D,0
,Java 中 float 类型的在内存中的大小为多少字节？,"数据类型,浮点数",8,4,2,16,B,0
,Java 中局部变量不一定要初始化？,"变量,变量初始化",正确,错误,,,B,0
,Java 中一个类可以继承多个类（extends 后面跟上多个类）？,"类,继承",正确,错误,,,B,0
,Math.round(3.7) 输出结果为？,"方法,类型转换",4,3.7,3,0,A,0
,Java 支持 goto 关键字吗？,关键字,支持,不支持,,,B,0
,线程结束后可以重新start吗？,线程,可以,不可以,,,B,0
,实现 Runnable 接口，必须重写 Runnable 的哪个方法？,"Java多线程,接口与实现类",start(),sleep(),run(),wait(),C,0
,所有异常类的基类是？,异常类,Java.throwable,Java.Lang.throwable,Java.Lang.Exception,Java.Lang.throwables,B,0
,如果你希望你的条件依赖于两个条件两者都是真的 ，那么在两个布尔语句之间放置什么符号才是正确的 ？,逻辑运算符,！,||,&&,,C,0
,为此值选择适当的数据类型：5.5,"浮点数,数据类型",int,double,Boolean,string,B,0
,面向对象编程意味着......,面向对象编程,根据分析问题时发现的对象设计应用程序,在编写程序并制定测试计划之前编写算法,编写由Java类组成的程序,,A,0
,以下哪项不是 Java 关键字？,关键字,static,try,Integer,new,C,0
,Java main 方法的正确语法是什么？,"静态方法,关键字,方法返回类型,形式参数",public void main(String[] args),public static void main(string[] args),public static void main(), 以上都不对,D,1
,一个对象可能是……,类与对象,任何事物,算法,一个数据容器,一个程序,A,0
,为此字段选择适当的数据类型：isSwimmer,数据类型,double,boolean,String,int,B,0
,Java关键字不区分大小写。,关键字,TRUE,FALSE,,,B,0
,空引用可用于访问静态变量或方法 ？,"引用,静态方法,静态变量",正确,错误,,,A,0
,Empty.java 文件名是否是有效的源文件名 ？,Java源文件,是,否,,,A,0
,确保循环不是无限的必要条件是什么 ？,循环结构,你的布尔语句在某些时候会是假的,在代码中的某处有一个布尔语句,你的布尔语句在某些时候是真的,以上所有条件,D,0
,在“for”循环中，循环的哪一部分不包括在“for”之后的括号中 ？,循环结构,初始化,循环体,布尔表达式,更新部分,B,0
,以下选项哪一个不正确 ？,类与对象,类在使用之前，需要将类实例化为对象,类运行时内存中存在对象,类和对象只是同一个东西的不同名称,对象是一个变量，其类型是用于声明变量的类。,C,0
,"以下代码将导致：

int a1 = 5;     
double a2 =(float)a1;","类型转换,编译运行,Java异常分类",编译错误,运行期错误,没有错误,运行时异常,C,1
,你可以将布尔值与整数进行比较吗 ？,"类型转换,布尔值",可以,不可以,,,B,0
,基础数据类型在堆栈上分配？,堆栈,是,否,,,,0
,"以下代码将导致：

int num = 6.7","编译与运行,变量类型",编译错误,运行期错误,num是6.7,num为6,A,0
,"以下输出是什么 ？

class TestIt
{
    public static void main ( String[] args )
    {
        int[] myArray = {1, 2, 3, 4, 5};
        ChangeIt.doIt( myArray );
        for(int j=0; j<myArray.length; j++)
            System.out.print( myArray[j] + "" "" );
    }
}
class ChangeIt
{
    static void doIt( int[] z ) 
    {
        z = null ;
    }
}",引用传递,1 2 3 4 5,什么都不会打印出来,程序将因运行时错误而停止。,0 0 0 0 0,A,2
,"以下输出是什么 ？

class LowHighSwap
{
    static void doIt( int[] z )
    {
        int temp = z[z.length-1];
        z[z.length-1] = z[0];
        z[0] = temp;
    }
}

class TestIt
{
    public static void main( String[] args )
    {
        int[] myArray = {1, 2, 3, 4, 5};
        LowHighSwap.doIt(myArray);
        for (int i = 0; i < myArray.length; i++)
        {
            System.out.print(myArray[i] + "" "");
        }
    }
}
","数组,数组访问",1 2 3 4 5,5 2 3 4 1,1 2 3 4 1,5 2 3 4 5,B,1
,"声明一个数组 ：

int [] ar = {1,2,3,4,5};
ar [4] 的值是多少 ？",数组访问,2,3,4,5,D,0
,"如果我们声明：

int [] ar = {1,2,3,4,5,6};
数组ar的大小是 ：",数组,0,5,6,7,C,0
,"以下输出是什么 ？

class ChangeIt
{
    static void doIt( int[] z )
    {
        int[] A = z;
        A[0] = 99;
    }
}

class TestIt
{
    public static void main( String[] args )
    {
        int[] myArray = {1, 2, 3, 4, 5};
        ChangeIt.doIt(myArray);
        for (int i = 0; i < myArray.length; i++)
        {
            System.out.print(myArray[i] + "" "");
        }
    }
}","引用传递,静态方法",1 2 3 4 5,99 2 3 4 5,0 2 3 4 5,99 99 99 99 99,B,1
,"以下哪个循环将在一个单独的行中显示此数组中的所有数字 ：

float [] nums = {1.1f，2.2f，3.3f};","循环结构,循环语句,数组",for (int i =0; i < 3; i++) System.out.print( nums[i]);,for (i = 1; i < 2; i++) System.out.print( nums[i]);,for (i = 0; i < 2; i++) System.out.print( nums[i]);,for (i = 1; i < 3; i++) System.out.print(nums[i]);,A,0
,"下面这个方法实现什么功能 ？

void blur(char[] z, String st)
{
    if(z.length < st.length()) return;
    for (int i = 0; i < st.length(); i++) {
        z[i] = st.charAt(i);
    }
}","方法,数组", 它确定数组是否包含与 String 相同的字符。,它将数组中的字符复制到 String。,它创建一个包含与 String 相同字符的新数组。,如果数组中有足够的空间，则会将字符串中的字符逐个复制到数组中。,D,0
,哪一个选项可以在索引处找到名为 ar 的数组中的最后一个值？,数组访问,0,1,ar.length,ar.length - 1,D,0
,数组是一个？,数组,相同数据类型的相同值,相同的数据类型，值可相同，也可不同,不同数据类型的相同值,不同数据类型的不同值,B,0
,"Java 使用按值调用。 以下方法调用传递给程序的值是多少 ？

double[] rats = {1.2, 3.4, 5.6};
routine( rats );","方法调用,按值传递",rats 的副本,rats 数组元素的值,rats 数组的引用,1.2,C,1
,"以下代码的输出是什么 ？

int[] arr = new int[9];
System.out.println(arr[9]);
 0",数组访问,0,9,错误，因为数组未初始化,错误，因为索引超出范围,D,0
,"以下数组最高索引值是多少 ？

byte[] values = new byte[x];",数组访问,0,x,x-1,x+1,C,0
,"以下程序段的输出是什么 ？

int[] num7 = {1, 3, 5, 2, 8, 9, 5, 0};
int x7 = num7[0];
for (int i = 0; i <= num7.length-1; i++)
{
    if(num7[i] < x7)
    {
        x7 = num7[i];
    }
}
System.out.println(x7); ","循环结构,数组",1,9,0,都不是,C,1
,"以下数组的长度是？

int[] grades = new int[4];",数组,0,3,4,5,C,0
,"以下代码打印到控制台的数字是多少 ？

int[] numbers = {1, 2, 3, 4, 5, 6, 7, 8, 9};
for (int i = 0; i < 8; i++) {
    System.out.println(numbers[i]);
}",数组访问,0-9,0-8,1—9,1—8,D,0
,"以下代码输出结果为：

class Main {
    public static void main(String args[]) { 
        System.out.println(fun());
    } 

    int fun()
    {
        return 20;
    }
}",方法调用,20,0,编译错误,,C,1
,"以下代码输出结果为：

public class Main { 
    public static void main(String args[]) { 
       String x = null; 
       giveMeAString(x); 
       System.out.println(x); 
    } 
    static void giveMeAString(String y) 
    { 
       y = ""RUNOOB""; 
    } 
}","方法调用,按值传递", RUNOOB,"null",编程错误,发生异常,B,1
,"以下代码输出结果为：

class Main {
public static void swap(Integer i, Integer j) {
      Integer temp = new Integer(i);
      i = j;
      j = temp;
   }
   public static void main(String[] args) {
      Integer i = new Integer(10);
      Integer j = new Integer(20);
      swap(i, j);
      System.out.println(""i = "" + i + "", j = "" + j);
   }
}
","方法调用,按值传递","i = 10, j = 20","i = 20, j = 10","i = 10, j = 10","i = 20, j = 20",A,1
,"以下代码输出结果为：

class intWrap {
   int x;
} 
public class Main { 
    public static void main(String[] args) {
       intWrap i = new intWrap();
       i.x = 10;
       intWrap j = new intWrap();
       j.x = 20;
       swap(i, j);
       System.out.println(""i.x = "" + i.x + "", j.x = "" + j.x);
    } 
    public static void swap(intWrap i, intWrap j) {
       int temp = i.x;
       i.x = j.x;
       j.x = temp;
    }
}","方法调用,引用传递","i.x = 20, j.x = 10","i.x = 10, j.x = 20","i.x = 10, j.x = 10"," i.x = 20, j.x = 20",A,1
,"以下代码输出结果为：

class Main {
    public static void main(String args[]) {   
        System.out.println(fun());
    }   
    static int fun(int x = 0)
    {
        return x;
    }
}",编译与运行，形式参数,0,编程错误,,,B,0
,"以下代码输出结果为：

class Test
{
    public void demo(String str)
    {
        String[] arr = str.split("";"");
        for (String s : arr)
        {
            System.out.println(s);
        }
    }
 
    public static void main(String[] args)
    {
        char array[] = {'a', 'b', ' ', 'c', 'd', ';', 'e', 'f', ' ', 
                        'g', 'h', ';', 'i', 'j', ' ', 'k', 'l'};
        String str = new String(array);
        Test obj = new Test();
        obj.demo(str);
    }
}
","字符串,方法调用,循环结构","ab cd
ef gh
ij kl","ab
cd;ef
gh;ij
kl",编译错误,,A,2
,"以下代码输出结果为：

class Main
{
    public static void main(String[] args)
    {
        StringBuffer a = new StringBuffer(""runnob"");
        StringBuffer b = new StringBuffer(""com"");
        a.delete(1,3);
        a.append(b);
        System.out.println(a);
    }
}","方法调用,字符串",roobcom,ruobcom,rnobcom, runobcom,C,1
,"以下代码输出结果为：

class Main
{
    public static void main(String[] args)
    {
        String obj1 = new String(""runoob"");
        String obj2 = new String(""runoob"");
 
        if(obj1.hashCode() == obj2.hashCode())
            System.out.println(""object1 与 object2 哈希码相等"");
 
        if(obj1 == obj2)
            System.out.println(""object1 与 object2 内存地址一样"");
 
        if(obj1.equals(obj2))
            System.out.println(""object1 与 object2 值相等"");
    }
}","字符串,Java字符编码,关系运算符","object1 与 object2 哈希码相等

object1 与 object2 值相等","object1 与 object2 哈希码相等

object1 与 object2 内存地址一样

object1 与 object2 值相等","object1 与 object2 哈希码相等

object1 与 object2 内存地址一样",,A,1
,"class Test implements Cloneable
{
    int a;
 
    Test cloning()
    {
        try
        {
            return (Test) super.clone();
        }
        catch(CloneNotSupportedException e)
        {
            System.out.println(""CloneNotSupportedException is caught"");
            return this;
        }
    }
}
 
class Main
{
 
    public static void main(String args[])
    {
        Test obj1 = new Test();
        Test obj2;
        obj1.a = 10;
        obj2 = obj1.cloning();
        obj2.a = 20;
 
        System.out.println(""obj1.a = "" + obj1.a);
        System.out.println(""obj2.a = "" + obj2.a);
    }
}",克隆,"obj1.a = 10
obj2.a = 20","obj1.a = 20
obj2.a = 20","obj1.a = 10
obj2.a = 10",,A,2
,"以下代码输出结果为：

class Main
{
    public static void main(String[] args)
    {
        String str = ""runoob"";
        str.toUpperCase();
        str += ""wwwrunoobcom"";
        String string = str.substring(2,13);
        string = string + str.charAt(4);;
        System.out.println(string);
    }
}",方法调用,NOOBwwwrunoo,noobwwwrunoo,NOOBwwwrunoob,noobwwwrunoob,B,2
,在switch(expression)语句中，expression的数据类型不能是：,分支语句,double,char,byte,short,A,0
,已知int[] a =new int[100]；，在下列给出的数组元素中，非法的是：,数组,a[0],a[1],a[99],a[100],D,0
,"设x,y 均为已定义的类名，下列声明对象x1的语句中正确的是",类与对象,public x x1= new y( );,x x1=x( ),x x1=new x( ),int x x1;,C,0
,有一个类A，以下为其构造函数的声明，其中正确的是,构造方法,void A(int x){...},A(int x){...},a(int x){...},void a(int x){...},B,0
,Java语言的类间的继承关系是,继承,多重的,单继承,线程的,不能继承,B,1
,下面说法正确的是,"static,抽象类和抽象方法",final 可修饰类、属性、方法,abstract可修饰类、属性、方法,定义抽象方法需有方法的返回类型、名称、参数列表和方法体,用final修饰的变量，在程序中可对这个变量的值进行更改,A,0
,"对于下列代码：
1) class Person {
2) public void printValue(int i, int j) {//... }
3) public void printValue(int i){//... }
4) }
5) public class Teacher extends Person {
6) public void printValue() {//... }
7) public void printValue(int i) {//...}
8) public static void main(String args[]){
9) Person t = new Teacher();
10) t.printValue(10);
11) }
第10行语句将调用哪行语句？",方法重载,line2,line3,line 6,line 7,D,0
,下面关于java中类的说法哪个是不正确的,类,类体中只能有变量定义和成员方法的定义，不能有其他语句,构造函数是类中的特殊方法,类一定要声明为public的，才可以执行,一个java文件中可以有多个class定义,C,0
,"给出一段程序，选择运行结果（）
public class sss {
public static void main(String args[])
{
String s1=args[1]; String s2=args[2];
String s3=args[3]; String s4=args[4];
System.out.println(“args[2]=”+s2);
}
}
命令行执行： java sss 1 2 3 4 结果是下面哪一个？",数组访问,args[2]=2,args[2]=null,args[2]=1,运行出现异常,D,1
,下面的是关于类及其修饰符的一些描述，正确的是：,"抽象类和抽象方法,final",abstract类只能用来派生子类，不能用来创建abstract类的对象,final类不但可以用来派生子类，也可以用来创建final类的对象,abstract不能与final同时修饰一个类,abstract方法必须在abstract类中声明，但abstract类定义中可以没有abstract方法,C,1
,下列关于静态初始化器的叙述中，哪一个是正确的？,静态方法,静态初始化器是在构造函数之前加上static修饰符,静态初始化器是对类自身进行初始化,静态初始化器在同一个类中只能有一个,静态初始化器是在其所属的类加载内存时由系统自动调用执行,D,1
,"编译并运行下面的程序，运行结果为()
public class T1 {
public static void main (String[] args){
T 1 a=new T1();
a.method(8);
a.method(1.2f);
}
void method(float i) {
System.out.println(""float: ""+i);
}
void method(long i) {
System.out.println(""long: ""+i);
}
}",方法,程序有编译错误，因为两个method()方法必须定义为静态（static）的,"程序可以编译运行，输出结果为：
long: 8
float: 1.2","程序可以编译运行，输出结果为：
float: 1.2
long: 8",程序中定义的两个参数不同的method方法称为方法重栽,B,0
,"编译并运行下面的程序，运行结果为( )
public class A {
public static void main (String[] args) {
A a=new B( );
a.test();
}
void test() {
System.out.print (""A"");
}
}
class B extends A {
void test() {
super.test();
System.out.println(""B"");
}
}","方法重载,super",子类B定义了与父类A中同名的方法test，java中称为方法的覆盖,代码可以编译运行，并输出结果：AB,代码可以编译运行，并输出结果：A,子类B定义了与父类A中同名的方法test，java中称为方法的重载,B,1
,下面哪个说法正确( ),"package和import--命令行,抽象类和抽象方法",如果某公共的接口被声明在一个源文件中，则接口必须与源文件具有相同的名字,如果源文件包含import语句，则该语句必须是除空行和注释行外的第一个语句行,如果某源文件包含package语句，则该语句必须是第一个非空、非注释行,接口中的方法必定是抽象方法，但可以不用关键字abstract修饰,C,0
,类的设计要求它的某个成员变量不能被外部类直接访问。应该使用下面的哪些修饰符获得需要的访问控制?,修饰符,public,no modifier,protected,private,D,0
,"类Teacher和Student都是类Person的子类
Person p;
Teacher t;
Student s;
p, t and s are all non-null.
if(t instanceof Person) { s = (Student)t; }
这个语句导致的结果是什么?",类与对象,将构造一个Student对象,表达式合法,编译时非法,编译时合法而在运行时可能非法,B,1
,"给出下面的代码：
class Person {
String name,department;
public void printValue(){
System.out.println(""name is ""+name);
System.out.println(""department is ""+department);
}
}
public class Teacher extends Person {
int salary;
public void printValue(){
// doing the same as in the parent method printValue()
// including print the value of name and department.
System.out.println(""salary is ""+salary);
}
}
下面的哪些表达式可以加入printValue()方法的""doing the same as...""部分?",super,printValue();,this.printValue();,person.printV alue();,super.printValue(),D,0
,Java程序的执行过程中用到一套JDK工具，其中java.exe是指,JDK,Java文档生成器,Java解释器,Java编译器,Java类分解器,B,0
,编译Java  Application 源程序文件将产生相应的字节码文件，这些字节码文件的扩展名为,文件扩展名,.java,.class,.html,.exe,B,0
,"设 x = 1 , y = 2 , z = 3，则表达式  y＋＝z－－/＋＋x  的值是",运算符,3,3.5,4,5,A,0
,不允许作为类及类成员的访问控制符的是,修饰符,public,private,static,protected,C,0
,为AB类的一个无形式参数无返回值的方法method书写方法头，使得使用类名AB作为前缀就可以调用它，该方法头的形式为,静态方法,static void method( ),public void method( ),final void method( ),abstract void method( ),A,0
,Java application中的主类需包含main方法，以下哪项是main方法的正确形参？,主方法,String  args,String  ar[],Char  arg,StringBuffer args[],B,0
,以下关于继承的叙述正确的是,"继承,接口与实现类",在Java中类只允许单一继承,在Java中一个类只能实现一个接口,在Java中一个类不能同时继承一个类和实现一个接口,在Java中接口只允许单一继,A,1
,以下哪个不是Java的原始数据类型,数据类型,int,Boolean,float,char,B,0
,若需要定义一个类域或类方法，应使用哪种修饰符？,修饰符,static,package,private,public,A,0
,"给出下面代码，关于该程序以下哪个说法是正确的？
public class Person{ 
static int arr[] = new int[5];
public static void main(String a[]) 
{ 
　　System.out.println(arr[0]);　}
}",默认值,编译时将产生错误,编译时正确，运行时将产生错误,输出零,输出空,C,0
,下列哪些语句关于Java内存回收的说明是正确的?,堆栈,程序员必须创建一个线程来释放内存,内存回收程序负责释放无用内存,内存回收程序允许程序员直接释放内存,内存回收程序可以在指定的时间释放内存对象,B,0
,以下哪个关键字可以用来对对象加互斥锁？,多线程同步,transient,synchronized,serialize,static,B,0
,"以下代码段执行后的输出结果为:
int  x =－3； 
int  y =－10；
System.out.println(y%x);",运算符,-1,2,1,3,A,1
,"有以下程序片段，下列哪个选项不能插入到行1:
1.
2 .public  class  Interesting{
3. //do sth   
4.}","package和import--命令行,修饰符",import java.awt.*;,package mypackage;,class OtherClass{   },public class MyClass{ },D,1
,"设有下面两个赋值语句:
a = Integer.parseInt(“12”);
b = Integer.valueOf(“12”).intValue();
下述说法正确的是",数字相关类,a是整数类型变量，b是整数类对象,a是整数类对象，b是整数类型变量,a和b都是整数类对象并且值相等,a和b都是整数类型变量并且值相等,D,1
,FilterOutputStream是BufferedOutputStream、DataOutputStream及PrintStream的父类，以下哪个类可能是FilterOutputStream构造函数的参数类型？,字节流,OutputStream,File,InputStream,BufferedOutputStream,A,1
,在编写Java  Applet程序时，需在程序的开头写上(      )语句。,package和import--命令行,import  java.awt.* ;,import  java.applet.Applet ;,import  java.io.* ;,import  java.awt.Graphics ;,B,0
,在使用interface声明一个接口时，只可以使用（     ）修饰符修饰该接口。,"接口与实现类,修饰符",private,protected,private  protected,public,D,1
,"有以下方法的定义，请选择该方法的返回类型:
ReturnType  method(byte x, double y)
 {
  return (short) x/y*2;
 }",数据类型,byte,short,int,double,D,1
,"关于以下代码段的说法正确的是()
1．String  s=""abcde"";
2．StringBuffer  s1=new  StringBuffer(""abcde"");
3．if(s.equals(s1))
4．       s1=null;
5．if(s1.equals(s))
6．       s=null;",字符串,第1行编译错误，String的构造器必须明确调用,第3行编译错误，因为s与s1有不同的类型,编译成功，但执行时在第5行有异常抛出,编译成功，过程中也没有异常抛出,D,1
,如下哪个是Java中的标识符,关键字,public,super,3number,width,D,0
,如下哪个是Java中的标识符,关键字,fieldname,super,3number,#number,A,0
,已知如下定义：String s = "story"; 下面哪个语句不是合法的,字符串,s += "books";,s = s + 100;,"int len = s.length;	",String t = s + “abc”;,C,0
,"下面的代码段执行之后count的值是什么()
int count = 1;
 for (int i = 1; i <= 5; i++) {
  count += i;
 }
 System.out.println(count);",循环语句,5,1,15,16,D,0
,定义一个类，必须使用的关键字是,类,public,class,"interface	",static,B,0
